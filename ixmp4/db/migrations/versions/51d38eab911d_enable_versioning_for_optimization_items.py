# type: ignore
"""Enable versioning for optimization items

Revision ID: 51d38eab911d
Revises: fbda0eb90f37
Create Date: 2025-09-04 12:14:06.982022

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# Revision identifiers, used by Alembic.
revision = "51d38eab911d"
down_revision = "fbda0eb90f37"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "optimization_equation_version",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("run__id", sa.Integer(), nullable=False),
        sa.Column(
            "data",
            sa.JSON().with_variant(
                postgresql.JSONB(astext_type=sa.Text()), "postgresql"
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=255), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.BigInteger(), nullable=False),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.PrimaryKeyConstraint(
            "id", "transaction_id", name=op.f("pk_optimization_equation_version")
        ),
    )
    with op.batch_alter_table("optimization_equation_version", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_optimization_equation_version_end_transaction_id"),
            ["end_transaction_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_equation_version_operation_type"),
            ["operation_type"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_equation_version_run__id"),
            ["run__id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_equation_version_transaction_id"),
            ["transaction_id"],
            unique=False,
        )

    op.create_table(
        "optimization_equationindexsetassociation_version",
        sa.Column("equation__id", sa.Integer(), nullable=False),
        sa.Column("indexset__id", sa.Integer(), nullable=False),
        sa.Column("column_name", sa.String(length=255), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.BigInteger(), nullable=False),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.PrimaryKeyConstraint(
            "id",
            "transaction_id",
            name=op.f("pk_optimization_equationindexsetassociation_version"),
        ),
    )
    with op.batch_alter_table(
        "optimization_equationindexsetassociation_version", schema=None
    ) as batch_op:
        batch_op.create_index(
            batch_op.f(
                "ix_optimization_equationindexsetassociation_version_end_transaction_id"
            ),
            ["end_transaction_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f(
                "ix_optimization_equationindexsetassociation_version_equation__id"
            ),
            ["equation__id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f(
                "ix_optimization_equationindexsetassociation_version_indexset__id"
            ),
            ["indexset__id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f(
                "ix_optimization_equationindexsetassociation_version_operation_type"
            ),
            ["operation_type"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f(
                "ix_optimization_equationindexsetassociation_version_transaction_id"
            ),
            ["transaction_id"],
            unique=False,
        )

    op.create_table(
        "optimization_indexset_version",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("run__id", sa.Integer(), nullable=False),
        sa.Column(
            "_data_type",
            sa.Enum("float", "int", "str", native_enum=False),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=255), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.BigInteger(), nullable=False),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.PrimaryKeyConstraint(
            "id", "transaction_id", name=op.f("pk_optimization_indexset_version")
        ),
    )
    with op.batch_alter_table("optimization_indexset_version", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_optimization_indexset_version_end_transaction_id"),
            ["end_transaction_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_indexset_version_operation_type"),
            ["operation_type"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_indexset_version_run__id"),
            ["run__id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_indexset_version_transaction_id"),
            ["transaction_id"],
            unique=False,
        )

    op.create_table(
        "optimization_indexsetdata_version",
        sa.Column("indexset__id", sa.Integer(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.BigInteger(), nullable=False),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.PrimaryKeyConstraint(
            "id", "transaction_id", name=op.f("pk_optimization_indexsetdata_version")
        ),
    )
    with op.batch_alter_table(
        "optimization_indexsetdata_version", schema=None
    ) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_optimization_indexsetdata_version_end_transaction_id"),
            ["end_transaction_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_indexsetdata_version_indexset__id"),
            ["indexset__id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_indexsetdata_version_operation_type"),
            ["operation_type"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_indexsetdata_version_transaction_id"),
            ["transaction_id"],
            unique=False,
        )

    op.create_table(
        "optimization_parameter_version",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("run__id", sa.Integer(), nullable=False),
        sa.Column(
            "data",
            sa.JSON().with_variant(
                postgresql.JSONB(astext_type=sa.Text()), "postgresql"
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=255), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.BigInteger(), nullable=False),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.PrimaryKeyConstraint(
            "id", "transaction_id", name=op.f("pk_optimization_parameter_version")
        ),
    )
    with op.batch_alter_table(
        "optimization_parameter_version", schema=None
    ) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_optimization_parameter_version_end_transaction_id"),
            ["end_transaction_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_parameter_version_operation_type"),
            ["operation_type"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_parameter_version_run__id"),
            ["run__id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_parameter_version_transaction_id"),
            ["transaction_id"],
            unique=False,
        )

    op.create_table(
        "optimization_parameterindexsetassociation_version",
        sa.Column("parameter__id", sa.Integer(), nullable=False),
        sa.Column("indexset__id", sa.Integer(), nullable=False),
        sa.Column("column_name", sa.String(length=255), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.BigInteger(), nullable=False),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.PrimaryKeyConstraint(
            "id",
            "transaction_id",
            name=op.f("pk_optimization_parameterindexsetassociation_version"),
        ),
    )
    with op.batch_alter_table(
        "optimization_parameterindexsetassociation_version", schema=None
    ) as batch_op:
        batch_op.create_index(
            batch_op.f(
                "ix_optimization_parameterindexsetassociation_version_end_transaction_id"
            ),
            ["end_transaction_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f(
                "ix_optimization_parameterindexsetassociation_version_indexset__id"
            ),
            ["indexset__id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f(
                "ix_optimization_parameterindexsetassociation_version_operation_type"
            ),
            ["operation_type"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f(
                "ix_optimization_parameterindexsetassociation_version_parameter__id"
            ),
            ["parameter__id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f(
                "ix_optimization_parameterindexsetassociation_version_transaction_id"
            ),
            ["transaction_id"],
            unique=False,
        )

    op.create_table(
        "optimization_scalar_version",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("run__id", sa.Integer(), nullable=False),
        sa.Column("value", sa.Float(), nullable=True),
        sa.Column("unit__id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=255), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.BigInteger(), nullable=False),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.PrimaryKeyConstraint(
            "id", "transaction_id", name=op.f("pk_optimization_scalar_version")
        ),
    )
    with op.batch_alter_table("optimization_scalar_version", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_optimization_scalar_version_end_transaction_id"),
            ["end_transaction_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_scalar_version_operation_type"),
            ["operation_type"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_scalar_version_run__id"),
            ["run__id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_scalar_version_transaction_id"),
            ["transaction_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_scalar_version_unit__id"),
            ["unit__id"],
            unique=False,
        )

    op.create_table(
        "optimization_table_version",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("run__id", sa.Integer(), nullable=False),
        sa.Column(
            "data",
            sa.JSON().with_variant(
                postgresql.JSONB(astext_type=sa.Text()), "postgresql"
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=255), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.BigInteger(), nullable=False),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.PrimaryKeyConstraint(
            "id", "transaction_id", name=op.f("pk_optimization_table_version")
        ),
    )
    with op.batch_alter_table("optimization_table_version", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_optimization_table_version_end_transaction_id"),
            ["end_transaction_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_table_version_operation_type"),
            ["operation_type"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_table_version_run__id"),
            ["run__id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_table_version_transaction_id"),
            ["transaction_id"],
            unique=False,
        )

    op.create_table(
        "optimization_tableindexsetassociation_version",
        sa.Column("table__id", sa.Integer(), nullable=False),
        sa.Column("indexset__id", sa.Integer(), nullable=False),
        sa.Column("column_name", sa.String(length=255), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.BigInteger(), nullable=False),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.PrimaryKeyConstraint(
            "id",
            "transaction_id",
            name=op.f("pk_optimization_tableindexsetassociation_version"),
        ),
    )
    with op.batch_alter_table(
        "optimization_tableindexsetassociation_version", schema=None
    ) as batch_op:
        batch_op.create_index(
            batch_op.f(
                "ix_optimization_tableindexsetassociation_version_end_transaction_id"
            ),
            ["end_transaction_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_tableindexsetassociation_version_indexset__id"),
            ["indexset__id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f(
                "ix_optimization_tableindexsetassociation_version_operation_type"
            ),
            ["operation_type"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_tableindexsetassociation_version_table__id"),
            ["table__id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f(
                "ix_optimization_tableindexsetassociation_version_transaction_id"
            ),
            ["transaction_id"],
            unique=False,
        )

    op.create_table(
        "optimization_variable_version",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("run__id", sa.Integer(), nullable=False),
        sa.Column(
            "data",
            sa.JSON().with_variant(
                postgresql.JSONB(astext_type=sa.Text()), "postgresql"
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=255), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.BigInteger(), nullable=False),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.PrimaryKeyConstraint(
            "id", "transaction_id", name=op.f("pk_optimization_variable_version")
        ),
    )
    with op.batch_alter_table("optimization_variable_version", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_optimization_variable_version_end_transaction_id"),
            ["end_transaction_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_variable_version_operation_type"),
            ["operation_type"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_variable_version_run__id"),
            ["run__id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_optimization_variable_version_transaction_id"),
            ["transaction_id"],
            unique=False,
        )

    op.create_table(
        "optimization_variableindexsetassociation_version",
        sa.Column("variable__id", sa.Integer(), nullable=False),
        sa.Column("indexset__id", sa.Integer(), nullable=False),
        sa.Column("column_name", sa.String(length=255), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.BigInteger(), nullable=False),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.PrimaryKeyConstraint(
            "id",
            "transaction_id",
            name=op.f("pk_optimization_variableindexsetassociation_version"),
        ),
    )
    with op.batch_alter_table(
        "optimization_variableindexsetassociation_version", schema=None
    ) as batch_op:
        batch_op.create_index(
            batch_op.f(
                "ix_optimization_variableindexsetassociation_version_end_transaction_id"
            ),
            ["end_transaction_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f(
                "ix_optimization_variableindexsetassociation_version_indexset__id"
            ),
            ["indexset__id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f(
                "ix_optimization_variableindexsetassociation_version_operation_type"
            ),
            ["operation_type"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f(
                "ix_optimization_variableindexsetassociation_version_transaction_id"
            ),
            ["transaction_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f(
                "ix_optimization_variableindexsetassociation_version_variable__id"
            ),
            ["variable__id"],
            unique=False,
        )

    with op.batch_alter_table("iamc_variable_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_iamc_variable_docs_dimension__id_iamc_variable"),
            type_="foreignkey",
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_iamc_variable_docs_dimension__id_iamc_variable"),
            "iamc_variable",
            ["dimension__id"],
            ["id"],
            ondelete="CASCADE",
        )

    with op.batch_alter_table("model_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_model_docs_dimension__id_model"), type_="foreignkey"
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_model_docs_dimension__id_model"),
            "model",
            ["dimension__id"],
            ["id"],
            ondelete="CASCADE",
        )

    with op.batch_alter_table("optimization_equation_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_optimization_equation_docs_dimension__id_optimizatio_bb11"),
            type_="foreignkey",
        )
        batch_op.create_foreign_key(
            batch_op.f(
                "fk_optimization_equation_docs_dimension__id_optimization_equation"
            ),
            "optimization_equation",
            ["dimension__id"],
            ["id"],
            ondelete="CASCADE",
        )

    with op.batch_alter_table("optimization_indexset_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_optimization_indexset_docs_dimension__id_optimizatio_72ee"),
            type_="foreignkey",
        )
        batch_op.create_foreign_key(
            batch_op.f(
                "fk_optimization_indexset_docs_dimension__id_optimization_indexset"
            ),
            "optimization_indexset",
            ["dimension__id"],
            ["id"],
            ondelete="CASCADE",
        )

    with op.batch_alter_table(
        "optimization_optimizationvariable_docs", schema=None
    ) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_optimization_optimizationvariable_docs_dimension__id_ba30"),
            type_="foreignkey",
        )
        batch_op.create_foreign_key(
            batch_op.f(
                "fk_optimization_optimizationvariable_docs_dimension__id_optimization_optimizationvariable"
            ),
            "optimization_optimizationvariable",
            ["dimension__id"],
            ["id"],
            ondelete="CASCADE",
        )

    with op.batch_alter_table("optimization_parameter_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_optimization_parameter_docs_dimension__id_optimizati_898e"),
            type_="foreignkey",
        )
        batch_op.create_foreign_key(
            batch_op.f(
                "fk_optimization_parameter_docs_dimension__id_optimization_parameter"
            ),
            "optimization_parameter",
            ["dimension__id"],
            ["id"],
            ondelete="CASCADE",
        )

    with op.batch_alter_table("optimization_scalar_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_optimization_scalar_docs_dimension__id_optimization_scalar"),
            type_="foreignkey",
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_optimization_scalar_docs_dimension__id_optimization_scalar"),
            "optimization_scalar",
            ["dimension__id"],
            ["id"],
            ondelete="CASCADE",
        )

    with op.batch_alter_table("optimization_table_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_optimization_table_docs_dimension__id_optimization_table"),
            type_="foreignkey",
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_optimization_table_docs_dimension__id_optimization_table"),
            "optimization_table",
            ["dimension__id"],
            ["id"],
            ondelete="CASCADE",
        )

    with op.batch_alter_table("region_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_region_docs_dimension__id_region"), type_="foreignkey"
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_region_docs_dimension__id_region"),
            "region",
            ["dimension__id"],
            ["id"],
            ondelete="CASCADE",
        )

    with op.batch_alter_table("scenario_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_scenario_docs_dimension__id_scenario"), type_="foreignkey"
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_scenario_docs_dimension__id_scenario"),
            "scenario",
            ["dimension__id"],
            ["id"],
            ondelete="CASCADE",
        )

    with op.batch_alter_table("unit_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_unit_docs_dimension__id_unit"), type_="foreignkey"
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_unit_docs_dimension__id_unit"),
            "unit",
            ["dimension__id"],
            ["id"],
            ondelete="CASCADE",
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("unit_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_unit_docs_dimension__id_unit"), type_="foreignkey"
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_unit_docs_dimension__id_unit"),
            "unit",
            ["dimension__id"],
            ["id"],
        )

    with op.batch_alter_table("scenario_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_scenario_docs_dimension__id_scenario"), type_="foreignkey"
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_scenario_docs_dimension__id_scenario"),
            "scenario",
            ["dimension__id"],
            ["id"],
        )

    with op.batch_alter_table("region_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_region_docs_dimension__id_region"), type_="foreignkey"
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_region_docs_dimension__id_region"),
            "region",
            ["dimension__id"],
            ["id"],
        )

    with op.batch_alter_table("optimization_table_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_optimization_table_docs_dimension__id_optimization_table"),
            type_="foreignkey",
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_optimization_table_docs_dimension__id_optimization_table"),
            "optimization_table",
            ["dimension__id"],
            ["id"],
        )

    with op.batch_alter_table("optimization_scalar_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_optimization_scalar_docs_dimension__id_optimization_scalar"),
            type_="foreignkey",
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_optimization_scalar_docs_dimension__id_optimization_scalar"),
            "optimization_scalar",
            ["dimension__id"],
            ["id"],
        )

    with op.batch_alter_table("optimization_parameter_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f(
                "fk_optimization_parameter_docs_dimension__id_optimization_parameter"
            ),
            type_="foreignkey",
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_optimization_parameter_docs_dimension__id_optimizati_898e"),
            "optimization_parameter",
            ["dimension__id"],
            ["id"],
        )

    with op.batch_alter_table(
        "optimization_optimizationvariable_docs", schema=None
    ) as batch_op:
        batch_op.drop_constraint(
            batch_op.f(
                "fk_optimization_optimizationvariable_docs_dimension__id_optimization_optimizationvariable"
            ),
            type_="foreignkey",
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_optimization_optimizationvariable_docs_dimension__id_ba30"),
            "optimization_optimizationvariable",
            ["dimension__id"],
            ["id"],
        )

    with op.batch_alter_table("optimization_indexset_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f(
                "fk_optimization_indexset_docs_dimension__id_optimization_indexset"
            ),
            type_="foreignkey",
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_optimization_indexset_docs_dimension__id_optimizatio_72ee"),
            "optimization_indexset",
            ["dimension__id"],
            ["id"],
        )

    with op.batch_alter_table("optimization_equation_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f(
                "fk_optimization_equation_docs_dimension__id_optimization_equation"
            ),
            type_="foreignkey",
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_optimization_equation_docs_dimension__id_optimizatio_bb11"),
            "optimization_equation",
            ["dimension__id"],
            ["id"],
        )

    with op.batch_alter_table("model_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_model_docs_dimension__id_model"), type_="foreignkey"
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_model_docs_dimension__id_model"),
            "model",
            ["dimension__id"],
            ["id"],
        )

    with op.batch_alter_table("iamc_variable_docs", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_iamc_variable_docs_dimension__id_iamc_variable"),
            type_="foreignkey",
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_iamc_variable_docs_dimension__id_iamc_variable"),
            "iamc_variable",
            ["dimension__id"],
            ["id"],
        )

    with op.batch_alter_table(
        "optimization_variableindexsetassociation_version", schema=None
    ) as batch_op:
        batch_op.drop_index(
            batch_op.f(
                "ix_optimization_variableindexsetassociation_version_variable__id"
            )
        )
        batch_op.drop_index(
            batch_op.f(
                "ix_optimization_variableindexsetassociation_version_transaction_id"
            )
        )
        batch_op.drop_index(
            batch_op.f(
                "ix_optimization_variableindexsetassociation_version_operation_type"
            )
        )
        batch_op.drop_index(
            batch_op.f(
                "ix_optimization_variableindexsetassociation_version_indexset__id"
            )
        )
        batch_op.drop_index(
            batch_op.f(
                "ix_optimization_variableindexsetassociation_version_end_transaction_id"
            )
        )

    op.drop_table("optimization_variableindexsetassociation_version")
    with op.batch_alter_table("optimization_variable_version", schema=None) as batch_op:
        batch_op.drop_index(
            batch_op.f("ix_optimization_variable_version_transaction_id")
        )
        batch_op.drop_index(batch_op.f("ix_optimization_variable_version_run__id"))
        batch_op.drop_index(
            batch_op.f("ix_optimization_variable_version_operation_type")
        )
        batch_op.drop_index(
            batch_op.f("ix_optimization_variable_version_end_transaction_id")
        )

    op.drop_table("optimization_variable_version")
    with op.batch_alter_table(
        "optimization_tableindexsetassociation_version", schema=None
    ) as batch_op:
        batch_op.drop_index(
            batch_op.f(
                "ix_optimization_tableindexsetassociation_version_transaction_id"
            )
        )
        batch_op.drop_index(
            batch_op.f("ix_optimization_tableindexsetassociation_version_table__id")
        )
        batch_op.drop_index(
            batch_op.f(
                "ix_optimization_tableindexsetassociation_version_operation_type"
            )
        )
        batch_op.drop_index(
            batch_op.f("ix_optimization_tableindexsetassociation_version_indexset__id")
        )
        batch_op.drop_index(
            batch_op.f(
                "ix_optimization_tableindexsetassociation_version_end_transaction_id"
            )
        )

    op.drop_table("optimization_tableindexsetassociation_version")
    with op.batch_alter_table("optimization_table_version", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_optimization_table_version_transaction_id"))
        batch_op.drop_index(batch_op.f("ix_optimization_table_version_run__id"))
        batch_op.drop_index(batch_op.f("ix_optimization_table_version_operation_type"))
        batch_op.drop_index(
            batch_op.f("ix_optimization_table_version_end_transaction_id")
        )

    op.drop_table("optimization_table_version")
    with op.batch_alter_table("optimization_scalar_version", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_optimization_scalar_version_unit__id"))
        batch_op.drop_index(batch_op.f("ix_optimization_scalar_version_transaction_id"))
        batch_op.drop_index(batch_op.f("ix_optimization_scalar_version_run__id"))
        batch_op.drop_index(batch_op.f("ix_optimization_scalar_version_operation_type"))
        batch_op.drop_index(
            batch_op.f("ix_optimization_scalar_version_end_transaction_id")
        )

    op.drop_table("optimization_scalar_version")
    with op.batch_alter_table(
        "optimization_parameterindexsetassociation_version", schema=None
    ) as batch_op:
        batch_op.drop_index(
            batch_op.f(
                "ix_optimization_parameterindexsetassociation_version_transaction_id"
            )
        )
        batch_op.drop_index(
            batch_op.f(
                "ix_optimization_parameterindexsetassociation_version_parameter__id"
            )
        )
        batch_op.drop_index(
            batch_op.f(
                "ix_optimization_parameterindexsetassociation_version_operation_type"
            )
        )
        batch_op.drop_index(
            batch_op.f(
                "ix_optimization_parameterindexsetassociation_version_indexset__id"
            )
        )
        batch_op.drop_index(
            batch_op.f(
                "ix_optimization_parameterindexsetassociation_version_end_transaction_id"
            )
        )

    op.drop_table("optimization_parameterindexsetassociation_version")
    with op.batch_alter_table(
        "optimization_parameter_version", schema=None
    ) as batch_op:
        batch_op.drop_index(
            batch_op.f("ix_optimization_parameter_version_transaction_id")
        )
        batch_op.drop_index(batch_op.f("ix_optimization_parameter_version_run__id"))
        batch_op.drop_index(
            batch_op.f("ix_optimization_parameter_version_operation_type")
        )
        batch_op.drop_index(
            batch_op.f("ix_optimization_parameter_version_end_transaction_id")
        )

    op.drop_table("optimization_parameter_version")
    with op.batch_alter_table(
        "optimization_indexsetdata_version", schema=None
    ) as batch_op:
        batch_op.drop_index(
            batch_op.f("ix_optimization_indexsetdata_version_transaction_id")
        )
        batch_op.drop_index(
            batch_op.f("ix_optimization_indexsetdata_version_operation_type")
        )
        batch_op.drop_index(
            batch_op.f("ix_optimization_indexsetdata_version_indexset__id")
        )
        batch_op.drop_index(
            batch_op.f("ix_optimization_indexsetdata_version_end_transaction_id")
        )

    op.drop_table("optimization_indexsetdata_version")
    with op.batch_alter_table("optimization_indexset_version", schema=None) as batch_op:
        batch_op.drop_index(
            batch_op.f("ix_optimization_indexset_version_transaction_id")
        )
        batch_op.drop_index(batch_op.f("ix_optimization_indexset_version_run__id"))
        batch_op.drop_index(
            batch_op.f("ix_optimization_indexset_version_operation_type")
        )
        batch_op.drop_index(
            batch_op.f("ix_optimization_indexset_version_end_transaction_id")
        )

    op.drop_table("optimization_indexset_version")
    with op.batch_alter_table(
        "optimization_equationindexsetassociation_version", schema=None
    ) as batch_op:
        batch_op.drop_index(
            batch_op.f(
                "ix_optimization_equationindexsetassociation_version_transaction_id"
            )
        )
        batch_op.drop_index(
            batch_op.f(
                "ix_optimization_equationindexsetassociation_version_operation_type"
            )
        )
        batch_op.drop_index(
            batch_op.f(
                "ix_optimization_equationindexsetassociation_version_indexset__id"
            )
        )
        batch_op.drop_index(
            batch_op.f(
                "ix_optimization_equationindexsetassociation_version_equation__id"
            )
        )
        batch_op.drop_index(
            batch_op.f(
                "ix_optimization_equationindexsetassociation_version_end_transaction_id"
            )
        )

    op.drop_table("optimization_equationindexsetassociation_version")
    with op.batch_alter_table("optimization_equation_version", schema=None) as batch_op:
        batch_op.drop_index(
            batch_op.f("ix_optimization_equation_version_transaction_id")
        )
        batch_op.drop_index(batch_op.f("ix_optimization_equation_version_run__id"))
        batch_op.drop_index(
            batch_op.f("ix_optimization_equation_version_operation_type")
        )
        batch_op.drop_index(
            batch_op.f("ix_optimization_equation_version_end_transaction_id")
        )

    op.drop_table("optimization_equation_version")
    # ### end Alembic commands ###
