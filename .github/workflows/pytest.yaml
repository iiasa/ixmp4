# copied from https://github.com/marketplace/actions/install-poetry-action
name: test

on: pull_request

jobs:
  test:
    strategy:
      matrix:
        python-version:
          - "3.10" # Earliest version supported by ixmp4
          - "3.11"
          - "3.12" # Latest version supported by ixmp4
        with-pyarrow:
          - false
        postgres-version:
          - "15"
        include:
          - python-version: "3.12"
            with-pyarrow: true
            postgres-version: "15"
          - python-version: "3.12"
            with-pyarrow: false
            postgres-version: "16"
    name: py${{ matrix.python-version }} | with-pyarrow=${{ matrix.with-pyarrow }} | pgsql${{ matrix.postgres-version }}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      #------------------------------------
      #  check-out repo and set-up python
      #------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      #------------------------------
      #  install & configure poetry  
      #------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------
      #  install dynamic version plugin  
      #----------------------------------
      - name: Install poetry-dynamic-versioning
        run: poetry self add "poetry-dynamic-versioning[plugin]"

      #------------------------------------
      #  load cached venv if cache exists
      #------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      #------------------------------------------------
      #  install dependencies if cache does not exist
      #------------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --with dev,server

      - name: Install PyArrow
        if: ${{ matrix.with-pyarrow }}
        run: pip install pyarrow

      #------------------------
      #  install root project
      #------------------------
      - name: Install library
        run: poetry install --no-interaction

      #------------------
      #  run test suite
      #------------------
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest --cov-report xml:.coverage.xml --cov-report term --cov=ixmp4 -rsx --benchmark-skip

  pre-commit:
    name: Code quality
    runs-on: ubuntu-latest
    steps:
      #------------------------------------
      #  check-out repo and set-up python
      #------------------------------------
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5

      #------------------------------
      #  install & configure poetry  
      #------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------
      #  install dynamic version plugin  
      #----------------------------------
      - name: Install poetry-dynamic-versioning
        run: poetry self add "poetry-dynamic-versioning[plugin]"

      #------------------------------------
      #  load cached venv if cache exists
      #------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      #------------------------------------------------
      #  install dependencies if cache does not exist
      #------------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --with dev,server

      #------------------------
      #  install root project
      #------------------------
      - name: Install library
        run: poetry install --no-interaction

      #-------------------------------
      #  run pre-commit/(mypy, ruff)
      #-------------------------------
      - uses: pre-commit/action@v3.0.0
