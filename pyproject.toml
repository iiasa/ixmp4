[tool.poetry]
authors = [
    "Max Wolschlager <wolschlager@iiasa.ac.at>",
    "Fridolin Glatter <glatter@iiasa.ac.at>",
    "Daniel Huppmann <huppmann@iiasa.ac.at>",
    "Philip Hackstock <hackstock@iiasa.ac.at>",
]
name = "ixmp4"
version = "0.0.0"
description = "a data warehouse for scenario analysis"
license = "MIT"
readme = "README.md"
packages = [{ include = "ixmp4" }, { include = "ixmp4/py.typed" }]
homepage = "https://software.ece.iiasa.ac.at"
repository = "https://github.com/iiasa/ixmp4"
documentation = "https://docs.ece.iiasa.ac.at/projects/ixmp4"

[tool.poetry.dependencies]
PyJWT = "^2.4.0"
SQLAlchemy = { extras = ["mypy"], version = "^2.0.25" }
SQLAlchemy-Utils = "^0.41.1"
alembic = "^1.13.1"
dask = { extras = ["dataframe"], version = "^2024.1.1" }
fastapi = "^0.109.0"
httpx = { extras = ["http2"], version = "^0.26.0" }
openpyxl = "^3.0.9"
pandas = "~2.1.2"
pandera = "^0.18.0"
pydantic = "^2.5.3"
python = ">=3.10, <3.13"
python-dotenv = "^1.0.1"
requests = "^2.27.1"
typer = "^0.9.0"
toml = "^0.10.2"
psycopg = { extras = ["binary"], version = "^3.1.17" }
pydantic-settings = "^2.1.0"
rich = "^13.7.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"
sphinx-multiversion = "^0.2.4"
sphinx-rtd-theme = "^2.0.0"
sphinxcontrib-bibtex = "^2.6.2"
sphinxcontrib-openapi = "^0.8.3"

[tool.poetry.group.server]
optional = true

[tool.poetry.group.server.dependencies]
gunicorn = "^21.2.0"
uvicorn = { extras = ["standard"], version = "^0.27.0.post1" }

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ptvsd = "^4.3.2"
pytest = "^8.0.0"
pytest-benchmark = "^4.0.0"
pytest-cov = "^4.1.0"
snakeviz = "^2.1.1"
types-toml = "^0.10.8.7"
build = "^1.0.3"
ruff = "^0.2.1"
pre-commit = "^3.6.0"
mypy = "^1.8.0"
pandas-stubs = "^2.1.4.231227"

[tool.poetry.group.tutorial]
optional = true

[tool.poetry.group.tutorial.dependencies]
ipykernel = "^6.29.0"

[tool.poetry.scripts]
ixmp4 = "ixmp4.__main__:app"

[build-system]
build-backend = "poetry_dynamic_versioning.backend"
requires = ["poetry-core>=1.2.0", "poetry-dynamic-versioning"]

[tool.mypy]
exclude = [
    '^example\.py$',
    '^import\.py$',
    '^tests\/',
    '^doc\/',
    '^ixmp4\/db\/migrations\/',
]
disable_error_code = ['override']
implicit_reexport = true
plugins = ['sqlalchemy.ext.mypy.plugin']

[[tool.mypy.overrides]]
module = ["pandas", "uvicorn.workers", "sqlalchemy_utils"]
ignore_missing_imports = true

[tool.ruff]
exclude = [
    ".git",
    "__pycache__",
    "*.egg-info",
    ".pytest_cache",
    ".mypy_cache",
    ".venv",
    "example.py",
    "import.py",
]
line-length = 88

[tool.ruff.lint]
select = ["C9", "E", "F", "I", "W"]
ignore = ["B008"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.poetry-dynamic-versioning]
enable = true
style = "pep440"
vcs = "git"
